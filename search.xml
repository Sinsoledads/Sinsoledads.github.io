<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo——Butterfly主题配置</title>
      <link href="/posts/16294.html"/>
      <url>/posts/16294.html</url>
      
        <content type="html"><![CDATA[<div class="note info">            <p>📖  本文章的常规配置的都是基于Butterfly官方进行配置<br>🦋  Butterfly Version 3.0.0-rc2<br><a class="btn-beautify button--animated block right outline larger" href="https://demo.jerryc.me/posts/21cfbf15/"   title="Butterfly"><i class="far fa-hand-point-right fa-fw"></i><span>Butterfly</span></a></p>          </div><h2 id="语言"><a href="#语言" class="headerlink" title="语言"></a>语言</h2><p>修改站点配置文件    <font color=#f47466>_config.yml</font></p><p>默认语言是en</p><p>Butterfly主题支持三种语言 如下:</p><ul><li>default(en)</li><li>zh-CN (簡體中文)</li><li>zh-TW (繁體中文)</li></ul><h2 id="个人信息"><a href="#个人信息" class="headerlink" title="个人信息"></a>个人信息</h2><p>修改博客各种信息,例如标题、副标题和邮箱等个人信息,请修改博客根目录的     <font color=#f47466>_config.yml</font></p><p><img src= "/image/loading.gif" data-lazy-src="/image/post/Butterfly-configuration/Butterfly_1.png" alt="Butterfly" title="Butterfly configuration"></p><h2 id="导航菜单"><a href="#导航菜单" class="headerlink" title="导航菜单"></a>导航菜单</h2><p>配置    <font color=#f47466>butterfly.yml</font></p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  首页: / || fa fa-home</span><br><span class="line">  时间轴: /archives/ || fa fa-archive</span><br><span class="line">  标签: /tags/ || fa fa-tags</span><br><span class="line">  分类: /categories/ || fa fa-folder-open</span><br><span class="line">  清单||fa fa-heartbeat:</span><br><span class="line"><span class="bullet">    -</span> 读书 || /books/ || fa fa-book</span><br><span class="line"><span class="bullet">    -</span> 图库 || /Gallery/ || fa-fw fas fa-images</span><br><span class="line"><span class="bullet">    -</span> 电影 || /movies/ || fa fa-film</span><br><span class="line">  友链: /link/ || fa fa-link</span><br><span class="line">  关于: /about/ || fa fa-heart</span><br></pre></td></tr></table></figure><p>效果如图:</p><p><img src= "/image/loading.gif" data-lazy-src="/image/post/Butterfly-configuration/Butterfly_2.png" alt="Butterfly" title="Butterfly configuration"></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><p>Butterfly 有六种 高亮配置</p><ul><li>default</li><li>darker</li><li>pale night</li><li>light</li><li>ocean</li><li>mac</li><li>mac light</li></ul><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">highlight<span class="emphasis">_theme: mac light</span></span><br></pre></td></tr></table></figure><p>效果如图:</p><p><img src= "/image/loading.gif" data-lazy-src="/image/post/Butterfly-configuration/Butterfly_3.png" alt="Butterfly" title="Butterfly configuration"></p><h3 id="代码复制"><a href="#代码复制" class="headerlink" title="代码复制"></a>代码复制</h3><p>配置    <font color=#f47466>butterfly.yml</font></p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">highlight<span class="emphasis">_copy: true</span></span><br></pre></td></tr></table></figure><p>效果如图:</p><div class="note info">            <p>复制</p>          </div><p><img src= "/image/loading.gif" data-lazy-src="/image/post/Butterfly-configuration/Butterfly_4.png" alt="Butterfly" title="Butterfly configuration"></p><div class="note info">            <p>粘贴</p>          </div><p><img src= "/image/loading.gif" data-lazy-src="/image/post/Butterfly-configuration/Butterfly_5.png" alt="Butterfly" title="Butterfly configuration"></p><h3 id="代码展开-关闭"><a href="#代码展开-关闭" class="headerlink" title="代码展开/关闭"></a>代码展开/关闭</h3><p>在默认情况下,代码框自动展开,可设置是否所有代码框都关闭状态,点击 &gt; 可展开代码</p><ul><li>true  全部代码框不展开，需点击 &gt; 打开</li><li>false 代码展开，有 &gt; 点击按钮</li><li>none  不显示 &gt; 按钮</li></ul><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">highlight<span class="emphasis">_shrink: true #代码框不展开，需点击 &#x27;&gt;&#x27; 打开</span></span><br></pre></td></tr></table></figure><p>效果如图:</p><p><img src= "/image/loading.gif" data-lazy-src="/image/post/Butterfly-configuration/Butterfly_6.png" alt="Butterfly" title="Butterfly configuration"></p><h2 id="图标"><a href="#图标" class="headerlink" title="图标"></a>图标</h2><h3 id="font-awesome-v5-图标"><a href="#font-awesome-v5-图标" class="headerlink" title="font-awesome v5 图标"></a>font-awesome v5 图标</h3><p>Butterfly支持 <a href="https://fa5.dashgame.com/#/%E5%9B%BE%E6%A0%87" title="" target="">font-awesome v5</a> 图标</p><div class="note warning">            <p>请参照  font-awesome v5 文档的写法</p>          </div><p>如图所示:</p><p><img src= "/image/loading.gif" data-lazy-src="/image/post/Butterfly-configuration/Butterfly_7.png" alt="Butterfly" title="Butterfly configuration"></p><p>示例:</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">social:</span><br><span class="line">  fab fa-github: https://github.com/xxxxx || Github</span><br><span class="line">  fas fa-envelope: mailto:xxxxxx@gmail.com || Email</span><br></pre></td></tr></table></figure><h3 id="阿里图标-iconfont"><a href="#阿里图标-iconfont" class="headerlink" title="阿里图标 iconfont"></a>阿里图标 iconfont</h3><div class="note info">            <p>由于 Font Awesome V5 是国外的图标网站对国内的一些图标不支持,所以需要需要可以使用阿里图标 iconfont</p>          </div><h4 id="注册账号"><a href="#注册账号" class="headerlink" title="注册账号"></a>注册账号</h4><p>打开 iconfont 的网站,点击导航栏的<font color=#f47466>人像</font>图标,会跳出注册界面,按要求注册账号。</p><p><img src= "/image/loading.gif" data-lazy-src="/image/post/Butterfly-configuration/Butterfly_8.png" alt="Butterfly" title="Butterfly configuration"></p><h4 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h4><p>点击资源管理下拉菜单里面的,我的项目, 点击新建项目,填入相应的项目信息就行。</p><p><img src= "/image/loading.gif" data-lazy-src="/image/post/Butterfly-configuration/Butterfly_12.png" alt="Butterfly" title="Butterfly configuration"></p><p><img src= "/image/loading.gif" data-lazy-src="/image/post/Butterfly-configuration/Butterfly_13.png" alt="Butterfly" title="Butterfly configuration"></p><p><img src= "/image/loading.gif" data-lazy-src="/image/post/Butterfly-configuration/Butterfly_14.png" alt="Butterfly" title="Butterfly configuration"></p><h4 id="添加图标入库"><a href="#添加图标入库" class="headerlink" title="添加图标入库"></a>添加图标入库</h4><p>选择自己需要的图标,把鼠标移到图标上,会显示三个按钮（依次是添加入库、收藏和下载）,而我们需要的是把图标添加入库</p><p><img src= "/image/loading.gif" data-lazy-src="/image/post/Butterfly-configuration/Butterfly_9.png" alt="Butterfly" title="Butterfly configuration"></p><p>添加入库后，你可以看到网站右上角<font color=#f47466>购物车</font>图标显示了<font color=#f47466>1</font>字,代表图标已经添加入库，点击<font color=#f47466>购物车</font>图标,会弹出侧边栏显示详情。</p><center>![Butterfly](/image/post/Butterfly-configuration/Butterfly_11.png "Butterfly configuration")</center><p>已选择的图标会显示在上面,你可以重复上面的操作,把需要的图标添加入库,然后点击添加到项目,接下来会要求选择项目名称。</p><h4 id="生成-CSS-链接"><a href="#生成-CSS-链接" class="headerlink" title="生成 CSS 链接"></a>生成 CSS 链接</h4><p>在添加到项目之后,会跳到项目的详情界面,点击<font color=#f47466>Font class</font>,然后再点击<font color=#f47466>暂无代码,点击生成文字</font>,网站会自动生成 CSS 链接,我们只需要复制链接就行。</p><p><img src= "/image/loading.gif" data-lazy-src="/image/post/Butterfly-configuration/Butterfly_15.png" alt="Butterfly" title="Butterfly configuration"></p><h4 id="添加链接进主题配置文件"><a href="#添加链接进主题配置文件" class="headerlink" title="添加链接进主题配置文件"></a>添加链接进主题配置文件</h4><p>打开主题配置文件<font color=#f47466>Butterfly.yml</font> ,找到 <font color=#f47466>inject</font> 配置，按要求把链接填入</p><p><img src= "/image/loading.gif" data-lazy-src="/image/post/Butterfly-configuration/Butterfly_16.png" alt="Butterfly" title="Butterfly configuration"></p><p>在我们需要使用的地方填入 icon,例如 Menu,图片使用格式为 iconfont icon名字</p><p><img src= "/image/loading.gif" data-lazy-src="/image/post/Butterfly-configuration/Butterfly_17.png" alt="Butterfly" title="Butterfly configuration"></p><p>运行 Butterfly 之后，你就可以看到 menu 的图标生效了。</p><h2 id="顶部图"><a href="#顶部图" class="headerlink" title="顶部图"></a>顶部图</h2><h3 id="主页顶部图"><a href="#主页顶部图" class="headerlink" title="主页顶部图"></a>主页顶部图</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">index<span class="emphasis">_img: https://cdn.jsdelivr.net/gh/songayideerzi/img/天气之子.png</span></span><br></pre></td></tr></table></figure><p>效果如图:<br><img src= "/image/loading.gif" data-lazy-src="/image/post/Butterfly-configuration/Butterfly_18.png" alt="Butterfly" title="Butterfly configuration"></p><h3 id="归档页顶部图"><a href="#归档页顶部图" class="headerlink" title="归档页顶部图"></a>归档页顶部图</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">index<span class="emphasis">_img: https://cdn.jsdelivr.net/gh/songayideerzi/img/天气之子.png</span></span><br></pre></td></tr></table></figure><h3 id="page页顶部图"><a href="#page页顶部图" class="headerlink" title="page页顶部图"></a>page页顶部图</h3><div class="note info">            <p>其他<font color=#f47466>page</font>页的顶部图可以在各自的 md 页面设置<font color=#f47466>front-matter</font>中的<font color=#f47466>top_img</font></p><p>页面如果没有设置各自的<font color=#f47466>top_img</font>,则会显示<font color=#f47466>default_top_img</font>图片</p>          </div><p>示例: <font color=#f47466>友链页面</font></p><p><img src= "/image/loading.gif" data-lazy-src="/image/post/Butterfly-configuration/Butterfly_19.png" alt="Butterfly" title="Butterfly configuration"></p><p>效果如图:</p><p><img src= "/image/loading.gif" data-lazy-src="/image/post/Butterfly-configuration/Butterfly_20.png" alt="Butterfly" title="Butterfly configuration"></p><h3 id="post页顶部图"><a href="#post页顶部图" class="headerlink" title="post页顶部图"></a>post页顶部图</h3><div class="note info">            <p><font color=#f47466>post</font> 页的顶部图会优先显示各自<font color=#f47466>front-matter</font>中的 <font color=#f47466>top_img</font>, 如果没有设置，则会缩略图（即各自<font color=#f47466>front-matter</font>中的<font color=#f47466>cover</font>)，如果没有则会显示显示<font color=#f47466>default_top_img</font>图片</p>          </div><p>示例：<font color=#f47466>Hexo——Butterfly主题配置</font></p><p><img src= "/image/loading.gif" data-lazy-src="/image/post/Butterfly-configuration/Butterfly_21.png" alt="Butterfly" title="Butterfly configuration"></p><p>效果如图:</p><p><img src= "/image/loading.gif" data-lazy-src="/image/post/Butterfly-configuration/Butterfly_22.png" alt="Butterfly" title="Butterfly configuration"></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker (Mysql , Nginx , Redis , Tomcat) 安装配置教程</title>
      <link href="/posts/27423.html"/>
      <url>/posts/27423.html</url>
      
        <content type="html"><![CDATA[<h2 id="Docker-安装以及常用命令-手动安装"><a href="#Docker-安装以及常用命令-手动安装" class="headerlink" title="Docker 安装以及常用命令 (手动安装)"></a>Docker 安装以及常用命令 (手动安装)</h2><ol><li><strong>删除旧版本的docker,防止有残留</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">yum remove docker \</span><br><span class="line">docker-client \</span><br><span class="line">docker-client-latest \</span><br><span class="line">docker-common \</span><br><span class="line">docker-latest \</span><br><span class="line">docker-latest-logrotate \</span><br><span class="line">docker-logrotate \</span><br><span class="line">docker-engine</span><br></pre></td></tr></table></figure></li><li><strong>安装可能用到的依赖</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">yum install -y yum-utils \</span><br><span class="line">device-mapper-persistent-data \</span><br><span class="line">lvm2</span><br></pre></td></tr></table></figure></li><li><strong>添加位置</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">sudo yum-config-manager \</span><br><span class="line">--add-repo \</span><br><span class="line">https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure></li><li><strong>查询可以装什么docker版本</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">yum list docker-ce --showduplicates | sort -r</span><br></pre></td></tr></table></figure></li><li><strong>安装指定版本（或者安装最新版本）</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">yum -y install docker-ce-18.06.1.ce-3.el7</span><br><span class="line"></span><br><span class="line">yum install docker-ce docker-ce-cli containerd.io</span><br><span class="line"><span class="code">``` </span></span><br><span class="line"><span class="code">6. **设置开机自启动**</span></span><br><span class="line"><span class="code">&amp;nbsp;</span></span><br><span class="line"><span class="code">```markdown</span></span><br><span class="line"><span class="code">systemctl enable docker</span></span><br></pre></td></tr></table></figure></li><li><strong>查看docker状态</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">systemctl status docker</span><br></pre></td></tr></table></figure></li><li><strong>停止docker</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">systemctl stop docker</span><br></pre></td></tr></table></figure></li><li><strong>查看版本</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">docker version</span><br></pre></td></tr></table></figure></li><li><strong>启动docker</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure></li><li><strong>重启docker</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure></li><li><strong>配置国内镜像</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"> vi /etc/docker/daemon.json</span><br><span class="line"></span><br><span class="line">然后配置一下内容：</span><br><span class="line"> </span><br><span class="line">&#123;</span><br><span class="line">&quot;registry-mirrors&quot;: [</span><br><span class="line">&quot;https://kfwkfulq.mirror.aliyuncs.com&quot;,</span><br><span class="line">&quot;https://2lqq34jg.mirror.aliyuncs.com&quot;,</span><br><span class="line">&quot;https://pee6w651.mirror.aliyuncs.com&quot;,</span><br><span class="line">&quot;https://registry.docker-cn.com&quot;,</span><br><span class="line">&quot;http://hub-mirror.c.163.com&quot;</span><br><span class="line">],</span><br><span class="line">&quot;dns&quot;: [&quot;8.8.8.8&quot;,&quot;8.8.4.4&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><div class="note warning">            <p>常见问题（需要手动在etc下创建docker文件夹，并在该文件下面创建daemon.json文件</p>          </div><ol start="11"><li><strong>搜索docker镜像</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">docker search 镜像名</span><br></pre></td></tr></table></figure></li><li><strong>拉去docker镜像</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">docker pull 镜像名   或者   docker pull 镜像名:版本号</span><br></pre></td></tr></table></figure></li><li><strong>删除镜像（镜像名和id都可以删除）</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">docker rmi 镜像id</span><br></pre></td></tr></table></figure></li><li><strong>查看当前docker中所有拉取的镜像</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">docker images      或者     docker image ls</span><br></pre></td></tr></table></figure></li><li><strong>查看所有的容器（包括已经停止的）</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure></li><li><strong>查看运行中的容器</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure></li><li><strong>启动容器</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">docker start <span class="xml"><span class="tag">&lt;<span class="name">容器名</span> <span class="attr">or</span> <span class="attr">ID</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li><li><strong>停止运行中的容器</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">docker stop <span class="xml"><span class="tag">&lt;<span class="name">容器名</span> <span class="attr">or</span> <span class="attr">ID</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li><li><strong>重启运行中的容器</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">docker restart <span class="xml"><span class="tag">&lt;<span class="name">容器名</span> <span class="attr">or</span> <span class="attr">ID</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li><li><strong>删除指定容器</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">docker rm <span class="xml"><span class="tag">&lt;<span class="name">容器名</span> <span class="attr">or</span> <span class="attr">ID</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li><li><strong>给容器自定义一个名字</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">docker run --name 自定义镜像名 -d 镜像名:latest</span><br><span class="line"></span><br><span class="line">示例：docker run --name mytomcat -d tomcat:latest</span><br></pre></td></tr></table></figure></li><li><strong>更改docker配置</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure></li><li><strong>删除所有容器</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">docker rm $(docker ps -a -q)</span><br></pre></td></tr></table></figure></li><li><strong>杀死指定容器</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">docker kill <span class="xml"><span class="tag">&lt;<span class="name">容器名</span> <span class="attr">or</span> <span class="attr">ID</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li><li><strong>后台运行</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">docker run -d <span class="xml"><span class="tag">&lt;<span class="name">Other</span> <span class="attr">Parameters</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">例如</span><br><span class="line"></span><br><span class="line">docker run -d -p 127.0.0.1:33301 centos6-ssh</span><br></pre></td></tr></table></figure></li><li><strong>暴露端口</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">一共有三种形式进行端口映射</span><br><span class="line"></span><br><span class="line">docker -p ip:hostPort:containerPort # 映射指定地址的主机端口到容器端口</span><br><span class="line"></span><br><span class="line">例如：docker -p 127.0.0.1:3306:3306 映射本机3306端口到容器的3306端口</span><br><span class="line"></span><br><span class="line">docker -p ip::containerPort # 映射指定地址的任意可用端口到容器端口</span><br><span class="line"></span><br><span class="line">例如：docker -p 127.0.0.1::3306 映射本机的随机可用端口到容器3306端口</span><br><span class="line"></span><br><span class="line">docer -p hostPort:containerPort # 映射本机的指定端口到容器的指定端口</span><br><span class="line"></span><br><span class="line">例如：docker -p 3306:3306 # 映射本机的3306端口到容器的3306端口</span><br></pre></td></tr></table></figure></li><li><strong>查看容器日志</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">dopcker logs <span class="xml"><span class="tag">&lt;<span class="name">容器名</span> <span class="attr">or</span> <span class="attr">ID</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li></ol><hr><h2 id="Docker-安装Mysql并开启远程连接"><a href="#Docker-安装Mysql并开启远程连接" class="headerlink" title="Docker 安装Mysql并开启远程连接"></a>Docker 安装Mysql并开启远程连接</h2><blockquote><p><strong>查看可用的mysql版本(第一种)</strong></p><p><span id="inline-green">可以通过 Sort by 查看其他版本的 MySQL，默认是最新版本 mysql：latest</span> <a class="btn-beautify button--animated " href="https://hub.docker.com/_/mysql?tab=tags"   title="访问MySQL镜像库地址"><i class="fas fa-link fa-fw"></i><span>访问MySQL镜像库地址</span></a></p></blockquote><p><img src= "/image/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/songayideerzi/img/docker1.png" alt="mysql" title="Other versions of mysql"><br><img src= "/image/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/songayideerzi/img/docker2.png" alt="mysql" title="Other versions of mysql"></p><blockquote><p><strong>我们还可以用命令来查看可用版本（第二种）</strong></p></blockquote><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">docker search mysql</span><br></pre></td></tr></table></figure><p><img src= "/image/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/songayideerzi/img/docker3.png" alt="mysql" title="Other versions of mysql"></p><ol><li><p><strong>拉取mysql镜像（这里拉取的是最新版）</strong><br>&nbsp;</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">docker pull mysql:latest</span><br></pre></td></tr></table></figure></li><li><p><strong>查看是否拉取成功（查看本地镜像）</strong><br>&nbsp;</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><p><img src= "/image/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/songayideerzi/img/docker4.png" alt="mysql" title="Other versions of mysql">   </p></li><li><p><strong>运行mysql容器</strong><br>&nbsp;</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">docker run -itd --name mysql -p 3306:3306 -e MYSQL<span class="emphasis">_ROOT_</span>PASSWORD=TongTong mysql</span><br><span class="line"></span><br><span class="line">-p 3306:3306 ：映射容器服务的 3306 端口到宿主机的 3306 端口，外部主机可以直接通过 宿主机ip:3306 访问到 MySQL 的服务。</span><br><span class="line"></span><br><span class="line">MYSQL<span class="emphasis">_ROOT_</span>PASSWORD=123456：设置 MySQL 服务 root 用户的密码。</span><br></pre></td></tr></table></figure><p><img src= "/image/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/songayideerzi/img/docker5.png" alt="mysql" title="Other versions of mysql">   </p></li><li><p><strong>查看是否安装成功</strong><br>&nbsp;</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure><p><img src= "/image/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/songayideerzi/img/docker6.png" alt="mysql" title="Other versions of mysql">  </p></li><li><p><strong>进入容器</strong><br>&nbsp;</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">docker exec -it mysql bash</span><br></pre></td></tr></table></figure></li><li><p><strong>进入mysql(修改密码)</strong><br>&nbsp;</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line"></span><br><span class="line">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;Lzslov123!&#x27;;</span><br></pre></td></tr></table></figure><p><img src= "/image/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/songayideerzi/img/docker7.png" alt="mysql" title="Other versions of mysql">  </p></li><li><p><strong>添加远程登录</strong><br>&nbsp;</p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">CREATE USER &#x27;liaozesong&#x27;@&#x27;%&#x27; IDENTIFIED WITH mysql<span class="emphasis">_native_</span>password BY &#x27;Lzslov123!&#x27;;</span><br><span class="line"></span><br><span class="line">GRANT ALL PRIVILEGES ON <span class="emphasis">*.*</span> TO &#x27;liaozesong&#x27;@&#x27;%&#x27;;</span><br></pre></td></tr></table></figure><p><img src= "/image/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/songayideerzi/img/docker8.png" alt="mysql" title="Other versions of mysql">  </p></li></ol><hr><h2 id="Docker-安装Nginx"><a href="#Docker-安装Nginx" class="headerlink" title="Docker 安装Nginx"></a>Docker 安装Nginx</h2><blockquote><p><strong>查看可用的nginx版本(第一种)</strong></p><p><span id="inline-green">可以通过 Sort by 查看其他版本的 nginx，默认是最新版本 nginx:latest</span> <a class="btn-beautify button--animated " href="https://hub.docker.com/_/nginx?tab=tags"   title="访问nginx镜像库地址"><i class="fas fa-link fa-fw"></i><span>访问nginx镜像库地址</span></a></p></blockquote><p><img src= "/image/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/songayideerzi/img/docker9.png" alt="nginx" title="Other versions of nginx"><br><img src= "/image/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/songayideerzi/img/docker10.png" alt="nginx" title="Other versions of nginx"> </p><blockquote><p><strong>我们还可以用命令来查看可用版本（第二种）</strong></p></blockquote><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">docker search nginx</span><br></pre></td></tr></table></figure><p><img src= "/image/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/songayideerzi/img/docker11.png" alt="nginx" title="Other versions of nginx"> </p><ol><li><strong>拉取nginx镜像（这里拉取的是最新版）</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">docker pull nginx:latest</span><br></pre></td></tr></table></figure></li><li><strong>查看是否拉取成功（查看本地镜像）</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><img src= "/image/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/songayideerzi/img/docker12.png" alt="nginx" title="Other versions of nginx"> </li><li><strong>运行nginx容器</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">docker run --name nginx -p 8080:80 -d nginx</span><br><span class="line"> </span><br><span class="line">--name nginx：容器名称。</span><br><span class="line"></span><br><span class="line">-p 80:80： 端口进行映射，将本地 80 端口映射到容器内部的 80 端口。</span><br><span class="line"></span><br><span class="line">-d nginx： 设置容器在在后台一直运行。</span><br></pre></td></tr></table></figure></li><li><strong>安装成功</strong></li></ol><blockquote><p><strong>最后我们可以通过浏览器可以直接访问 80 端口的 nginx 服务</strong></p></blockquote><p><img src= "/image/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/songayideerzi/img/docker13.png" alt="nginx" title="Other versions of nginx"> </p><hr><h2 id="Docker-安装Tomcat"><a href="#Docker-安装Tomcat" class="headerlink" title="Docker 安装Tomcat"></a>Docker 安装Tomcat</h2><blockquote><p><strong>查看可用的tomcat版本(第一种)</strong></p><p><span id="inline-green">可以通过 Sort by 查看其他版本的 tomcat，默认是最新版本 tomcat:latest</span> <a class="btn-beautify button--animated " href="https://hub.docker.com/_/tomcat?tab=tags"   title="访问Tomcat镜像库地址"><i class="fas fa-link fa-fw"></i><span>访问Tomcat镜像库地址</span></a></p></blockquote><p><img src= "/image/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/songayideerzi/img/docker14.png" alt="tomcat" title="Other versions of tomcat"> </p><blockquote><p><strong>我们还可以用命令来查看可用版本（第二种）</strong></p></blockquote><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">docker search tomcat</span><br></pre></td></tr></table></figure><p><img src= "/image/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/songayideerzi/img/docker15.png" alt="tomcat" title="Other versions of tomcat"> </p><ol><li><strong>拉取tomcat镜像（这里拉取的是最新版）</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">docker pull tomcat:latest</span><br></pre></td></tr></table></figure></li><li><strong>查看是否拉取成功（查看本地镜像）</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">docker images  或者  docker images|grep tomcat</span><br></pre></td></tr></table></figure><img src= "/image/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/songayideerzi/img/docker16.png" alt="tomcat" title="Other versions of tomcat"> </li><li><strong>运行tomcat容器</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">docker run --name tomcat -p 8080:8080 -d tomcat</span><br><span class="line"> </span><br><span class="line">--name tomcat:容器名称</span><br><span class="line"></span><br><span class="line">-p 8080:8080： 端口进行映射，将本地 8080 端口映射到容器内部的 8080 端口。</span><br><span class="line"></span><br><span class="line">-d tomcat:设置容器在在后台一直运行。</span><br></pre></td></tr></table></figure></li></ol><hr><h2 id="问题解决（tomcat-404问题）"><a href="#问题解决（tomcat-404问题）" class="headerlink" title="问题解决（tomcat 404问题）"></a>问题解决（tomcat 404问题）</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">使用命令: docker exec -it 运行的<span class="xml"><span class="tag">&lt;<span class="name">容器名</span> <span class="attr">or</span> <span class="attr">ID</span>&gt;</span></span> /bin/bash 进入到tomcat的目录</span><br><span class="line"></span><br><span class="line">使用命令：ls -l 查看tomcat下面的所有文件夹</span><br></pre></td></tr></table></figure><p><img src= "/image/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/songayideerzi/img/docker17.png" alt="tomcat" title="Solve the 404 problem"> </p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">cd webapps 查看 ls -l （发现没有文件）</span><br></pre></td></tr></table></figure><p><img src= "/image/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/songayideerzi/img/docker18.png" alt="tomcat" title="Solve the 404 problem"> </p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">cd ../ 退出来</span><br><span class="line">   </span><br><span class="line">cd webapps.dist 查看 ls -l （发现有文件）</span><br></pre></td></tr></table></figure><p><img src= "/image/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/songayideerzi/img/docker19.png" alt="tomcat" title="Solve the 404 problem"> </p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">cd ../ 退出来</span><br><span class="line">  </span><br><span class="line">使用命令：rm -rf webapps 删除webapps这个空文件夹</span><br></pre></td></tr></table></figure><p><img src= "/image/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/songayideerzi/img/docker20.png" alt="tomcat" title="Solve the 404 problem"> </p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">使用命令：mv webapps.dist webapps 修改webapps.dist文件夹的名字</span><br></pre></td></tr></table></figure><p><img src= "/image/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/songayideerzi/img/docker21.png" alt="tomcat" title="Solve the 404 problem"> </p><blockquote><p><strong>查看是否成能访问</strong></p></blockquote><p><img src= "/image/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/songayideerzi/img/docker22.png" alt="tomcat" title="Solve the 404 problem"> </p><blockquote><p><strong>但是，这还没有提交的话，在镜像重启后，又会报404错误，所以我们commit一下（注：mytomcat为重新起的镜像名）</strong></p><p><strong>exit 退出tomcat镜像</strong></p></blockquote><p><img src= "/image/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/songayideerzi/img/docker23.png" alt="tomcat" title="Solve the 404 problem"> </p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">使用命令：dockers ps 查看运行中的镜像</span><br><span class="line">  </span><br><span class="line">使用命令：docker commit (镜像ID) mytomcat 提交到我的镜像</span><br><span class="line">   </span><br><span class="line">使用命令：docker images 查看镜像(mytomcat)</span><br></pre></td></tr></table></figure><p><img src= "/image/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/songayideerzi/img/docker24.png" alt="tomcat" title="Solve the 404 problem"> </p><blockquote><p>重新运行tomcat镜像 docker run –name mytomcat -p 8080:8080 -d mytomcat</p></blockquote><hr><h2 id="Docker-安装Redis"><a href="#Docker-安装Redis" class="headerlink" title="Docker 安装Redis"></a>Docker 安装Redis</h2><blockquote><p><strong>查看可用的redis版本(第一种)</strong></p><p><span id="inline-green">可以通过 Sort by 查看其他版本的 redis，默认是最新版本 redis:latest</span> <a class="btn-beautify button--animated " href="https://hub.docker.com/_/redis?tab=tags"   title="访问Redis镜像库地址"><i class="fas fa-link fa-fw"></i><span>访问Redis镜像库地址</span></a></p></blockquote><p><img src= "/image/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/songayideerzi/img/docker26.png" alt="redis" title="Other versions of redis"><br><img src= "/image/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/songayideerzi/img/docker27.png" alt="redis" title="Other versions of redis"> </p><blockquote><p><strong>我们还可以用命令来查看可用版本（第二种）</strong></p></blockquote><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">docker search redis</span><br></pre></td></tr></table></figure><p><img src= "/image/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/songayideerzi/img/docker28.png" alt="redis" title="Other versions of redis"> </p><ol><li><strong>拉取redis镜像（这里拉取的是最新版）</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">docker pull redis:latest</span><br></pre></td></tr></table></figure></li><li><strong>查看是否拉取成功（查看本地镜像）</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">docker images  或者  docker images|grep redis</span><br></pre></td></tr></table></figure><img src= "/image/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/songayideerzi/img/docker29.png" alt="redis" title="Other versions of redis"> </li><li><strong>运行redis容器</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">docker run -itd --name redis -p 6379:6379 redis</span><br><span class="line"></span><br><span class="line">-p 6379:6379：映射容器服务的 6379 端口到宿主机的 6379 端口。外部可以直接通过宿主机ip:6379 访问到 Redis 的服务。</span><br></pre></td></tr></table></figure></li><li><strong>安装成功</strong><br>&nbsp;<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">最后我们可以通过 docker ps 命令查看容器的运行信息</span><br></pre></td></tr></table></figure><img src= "/image/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/songayideerzi/img/docker30.png" alt="redis" title="Other versions of redis"> </li></ol><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">接着我们通过 redis-cli 连接测试使用 redis 服务。</span><br><span class="line"></span><br><span class="line">docker exec -it redis /bin/bash</span><br></pre></td></tr></table></figure><p><img src= "/image/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/songayideerzi/img/docker31.png" alt="redis" title="Other versions of redis"> </p><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">设置密码</span><br><span class="line"><span class="code">     </span></span><br><span class="line"><span class="code">进入redis目录 cd /usr/local/bin</span></span><br><span class="line"><span class="code">   </span></span><br><span class="line"><span class="code">运行命令 redis-cli</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">查看现有密码 config get requirepass</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">设置redis密码config set requirepass **** (****为你要设置的密码)</span></span><br></pre></td></tr></table></figure><p><img src= "/image/loading.gif" data-lazy-src="https://cdn.jsdelivr.net/gh/songayideerzi/img/docker32.png" alt="redis" title="Other versions of redis"> </p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
            <tag> Tomcat </tag>
            
            <tag> Reids </tag>
            
            <tag> Mysql </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/16107.html"/>
      <url>/posts/16107.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Hello Word </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hello World </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
